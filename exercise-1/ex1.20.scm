(define (gcd a b)
  (if (= b 0)
      a
      (gcd b (remainder a b))))

(gcd 206 40)
;; => 2

;; 長くなるので remainder を r と表記する

;; normal order evaluation
(gcd 206 40)
(if (= 40 0)
    206
    (gcd 40 (r 206 40)))

(if (= (r 206 40) 0) ; if は特殊形式なのでここで1回評価される（小計1回）
    40
    (gcd (r 206 40) (r 40 (r 206 40))))

(if (= (r 40 (r 206 40)) 0) ; ここで2回評価される（小計3回）
    (r 206 40)
    (gcd (r 40 (r 206 40)) (r (r 206 40) (r 40 (r 206 40)))))

(if (= (r (r 206 40) (r 40 (r 206 40))) 0) ; ここで4回評価される（小計7回）
    (r 40 (r 206 40))
    (gcd (r (r 206 40) (r 40 (r 206 40))) (r (r 40 (r 206 40)) (r (r 206 40) (r 40 (r 206 40))))))

(if (= (r (r 40 (r 206 40)) (r (r 206 40) (r 40 (r 206 40)))) 0) ; ここで7回評価され #t となる（小計14回）
    (r (r 206 40) (r 40 (r 206 40)))
    (gcd (r (r 40 (r 206 40)) (r (r 206 40) (r 40 (r 206 40)))) (r (r (r 206 40) (r 40 (r 206 40)))
                                                                   (r (r 40 (r 206 40)) (r (r 206 40) (r 40 (r 206 40)))))))

(r (r 206 40) (r 40 (r 206 40))) ; 先の評価で #t となった返り値を最後に評価する、ここでは4回なので合計18回


;; applicative order evaluation
(gcd 206 40)
(gcd 40 (r 206 40)) ; gcd の展開より remainder が先に評価される（1回目）
(gcd 40 6)
(gcd 6 (r 40 6)) ; 2回目
(gcd 6 4)
(gcd 4 (r 6 4)) ; 3回目
(gcd 4 2)
(gcd 2 (r 4 2)) ; 4回目
(gcd 2 0)
;; => 2
