;;; 明示的ディスパッチによるジェネリック演算

; 新しい型を追加する場合
; 全てのジェネリックインターフェース手続きに新しい型をチェックする節を追加しなければならない
; またシステム全体で名前がかぶらないようにしないといけない
; これらの弱点は加法的でないという点からきている

; 新しい演算を追加する場合
; それぞれの手続きにおいて必要な演算を定義しきっているので、新しい演算の追加によって既存の型に手を加える必要はない

; よって新しい演算が次々と増える場合には、明示的ディスパッチによる方法が楽


;;; データ主導スタイル
; 型と演算を二次元テーブルで表現するスタイル

; 新しい型を追加する場合
; 新しく追加する型のパッケージを作成する
; 二次元テーブルにデータを挿入する

; 新しい演算を追加する場合
; インターフェースの実装になっているため、既存のパッケージにも新しい演算を追加する必要がある

; よって新しい型を追加する方が楽


;;; メッセージパッシングスタイル
; 型と演算を二次元テーブルで表現するスタイル、データ主導とは行と列が異なる

; 新しい型を追加する場合
; 新しい型のコンストラクタを定義する

; 新しい演算を追加する場合
; 既存のコンストラクタに新しい演算を追加する

; よって新しい型を追加する方が楽
